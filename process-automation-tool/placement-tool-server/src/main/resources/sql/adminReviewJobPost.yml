reviewJobPost:
 
 getJobPostByApprovalStatus: select jp.id as id, jp.job_id as jobId, jp.job_title as jobTitle, jp.total_vacancy as vacancy, u.username as createdBy, jp.published_at as publishedOn,  jp.job_approval_status as approvalStatus, jp.approval_status_updated_on as approvedRejectedOn,jp.job_role as jobRole, jp.occupation, jp.district, jp.state, jp.job_summary as jobSummary, jp.application_date as applicationLastDate,jp.leave_policy, jp.monthly_incentives, jp.contact_number, jp.work_timings, jp.interview_end_date_time, jp.interview_start_date_time, jp.walk_in_interview_flg, jp.preferred_gender, jp.army_background_preference, jp.cgsc_certificate_preference as isCGSCCertified, jp.experience_required as minimumExperience, jp.qualification_required as educationQualification, jp.min_salary as minSalary, jp.max_salary as maxSalary, jp.job_description_path as jobDescriptionDocumentPath, rc.admin_comment as adminComments from users as u inner join job_postings as jp on jp.posted_by = u.id left join (select admin_comment,id,job_id from job_postings_review_comments a where id = (select max(id) from job_postings_review_comments b where a.job_id = b.job_id) order by id) as rc on jp.id = rc.job_id where jp.job_approval_status=:approvalStatus and jp.job_status=:publishedStatus and jp.active_flg=:activeFlagTrue and u.is_active_flg=:activeFlagTrue and u.enrolment_status=:enrolmentStatusApproved order by jp.published_at;
 updateJobPostApprovalStatus: update job_postings set job_approval_status =:approvalStatus, approval_status_updated_on = current_date() where id =:id;
 insertAdminComments: insert into job_postings_review_comments (job_id, admin_comment, commented_by, updated_on) values (:id,:adminComment,:commentedBy,sysdate());