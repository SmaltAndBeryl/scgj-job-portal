viewJobApplicants: 

 viewJobApplicationSummary: select (select jp.job_id from job_postings as jp where id=:uniqueJobId) as jobId, (select id from job_postings as jp where id=:uniqueJobId) as uniqueId,(select job_title from job_postings as jp where id=:uniqueJobId) as jobTitle,(select jp.total_vacancy from job_postings as jp where id=:uniqueJobId) as vacancy,(select jp.application_date from job_postings as jp where id=:uniqueJobId) as applicationLastDate,(select jp.job_description_path from job_postings as jp where id=:uniqueJobId) as jobDescriptionPath,(select count(jc.candidate_id) from job_candidate_mapping as jc where job_id=:uniqueJobId) as totalCandidates, (select count(jc.candidate_id) from job_candidate_mapping as jc inner join users as u on jc.candidate_id=u.id inner join candidates as c on u.id=c.user_id where job_id=:uniqueJobId and c.gender=:genderMale) as maleCandidates, (select count(jc.candidate_id) from job_candidate_mapping as jc inner join users as u on jc.candidate_id=u.id inner join candidates as c on u.id=c.user_id where job_id=:uniqueJobId and c.gender=:genderFemale) as femaleCandidates,(select count(jc.candidate_id) from job_candidate_mapping as jc inner join users as u on jc.candidate_id=u.id inner join candidates as c on u.id=c.user_id where job_id=:uniqueJobId and c.gender=:otherGender) as otherCandidates, (select count(jc.candidate_id) from job_candidate_mapping as jc inner join users as u on jc.candidate_id=u.id inner join candidates as c on u.id=c.user_id where job_id=:uniqueJobId and c.defence_background =:trueFlag) as exArmyPersonnel,(select count(jc.candidate_id) from job_candidate_mapping as jc where job_id=:uniqueJobId and status=:statusInReview) as inReview,(select count(jc.candidate_id) from job_candidate_mapping as jc where job_id=:uniqueJobId and status=:statusShortlisted) as selected, ( select count(jc.candidate_id) from job_candidate_mapping as jc where job_id =:uniqueJobId and status =:statusHired ) as hired, (select count(jc.candidate_id) from job_candidate_mapping as jc where job_id=:uniqueJobId and status=:statusRejected) as rejected;
 viewCandidateJobSummary: select u.id as userId, u.username as candidateName, c.gender, u.mobile_number as mobileNumber, u.state as state, jc.applied_on, jc.status from users as u inner join job_candidate_mapping as jc on u.id=jc.candidate_id inner join candidates as c on jc.candidate_id = c.user_id where jc.job_id=:jobId;