manageJobApplications : 

 viewJobApplicants : select u.id as candidateId,u.username as candidateName, u.mobile_number as candidateMobileNumber, c.certificate_path as certificatePath, c.resume_path as resumePath, u.state as state, c.qualification as educationQualification, c.working_experience as workingExperience, c.gender as gender, c.defence_background as defenceBackground, c.guardian_mobile_number as guardianMobileNumber,jc.candidate_id as candidateId, jc.applied_on appliedOn, jc.status as applicationStatus, jc.updated_on as updatedOn, c.is_cgsc_certified as isCgscCertified, c.certificate_number as cgscCertificateNumber, jr.job_role as jobRole, c.address as address, c.aadhaar_number as adharNumber, tp.tp_name as trainingPartner from job_candidate_mapping as jc inner join users as u on jc.candidate_id=u.id inner join candidates as c on u.id=c.user_id inner join job_roles as jr on c.job_role_id = jr.id left join training_partner as tp on tp.id=c.tp_id where u.is_active_flg=:activeFlagTrue and jc.job_id=:jobId;
 updateJobApplicationStatus: update job_candidate_mapping set status=:updatedStatus, updated_on=curdate(), salary=:salary, offer_letter_path=:offerLetter, joining_date=:joiningDate where job_id=:jobId and candidate_id=:candidateId;
 checkRemainingVacancy: select (select total_vacancy from job_postings where id=:jobId) - (select count(id) from job_candidate_mapping where job_id=:jobId and status=:applicationStatusHired) as remainingVacancy;
 fetchMinimumSalary: select min_salary from job_postings where id =:jobId;