adminDashboard:

 registeredEmployersCount: SELECT COUNT(id) as registeredEmployersCount FROM users WHERE user_role=:userRoleEmployer AND is_active_flg=:trueFlag AND enrolment_status=:approvedFlag;

 activeCandidatesCount: SELECT COUNT(id) as activeCandidatesCount FROM users WHERE user_role=:userRoleCandidate AND is_active_flg=:trueFlag AND enrolment_status=:approvedFlag;

 placedCandidatesCount: SELECT COUNT(DISTINCT candidate_id) as placedCandidatesCount FROM job_candidate_mapping WHERE status =:applicationStateHired;

 activeJobPostCount: SELECT COUNT(u.id) as activeJobPostCount FROM users as u inner join job_postings as jp on u.id = jp.posted_by WHERE active_flg=:trueFlag AND job_status=:publishedState And u.is_active_flg=:trueFlag AND u.enrolment_status=:userApprovedFlag AND jp.job_approval_status=:jobStatusApprovedFlag AND application_date>=CURDATE();
 
 candidatePlacementDetails: select u.username as companyName, (select username from users where id=cm.candidate_id) as candidateName, u.mobile_number, c.guardian_name, c.dob, c.aadhaar_number, jp.job_id, jp.job_role, jp.district as jobDistrict, jp.state as jobState, cm.status as applicationStatus, cm.joining_date, cm.offer_letter_path, cm.salary from users as u inner join job_postings as jp on u.id = jp.posted_by inner join job_candidate_mapping as cm on jp.id = cm.job_id inner join candidates as c on cm.candidate_id = c.user_id where jp.active_flg=:activeFlagTrue and jp.job_approval_status=:jobStatusApproved and jp.job_status !=:jobStatusNotPublished and cm.updated_on between :startDate and :endDate;

 candidateReportDetails: select u.username, u.state, u.pincode, u.is_active_flg, u.registered_on, u.last_login, u.mobile_number, c.gender, c.qualification, c.age, c.address, c.working_experience, c.aadhaar_number, j.job_role from users as u inner join candidates as c on u.id=c.user_id inner join job_roles as j on c.job_role_id=j.id where registered_on between :startDate and :endDate;
 
 companyReportDetails: select totalJobPost.employerId,totalJobPost.occupation,totalJobPost.address,totalJobPost.liasing_authority, totalJobPost.email_address, totalJobPost.username ,totalJobPost.companyState, totalJobPost.totalVacancy ,totalJobPost.pan_number, totalJobPost.profileStatus, totalJobPost.mobile_number, totalJobPost.jobDistrict, totalJobPost.jobState, totalJobPost.pincode, totalJobPost.last_login, totalJobPost.registered_on,totalJobPost.totalVacancy-closedJobPost.closedJobPost as openJobs,closedJobPost.closedJobPost as closedJobs from (select u.id as employerId, u.mobile_number ,jp.occupation as occupation, if(jp.total_vacancy!=0, 'Active','Inactive') as profilestatus, ifnull(sum(jp.total_vacancy),0) as totalVacancy, jp.district as jobDistrict ,jp.state as jobState,e.email_address, e.address, e.liasing_authority, e.pan_number, u.state as companyState, u.pincode, u.last_login, u.registered_on,u.username from users as u inner join employer as e on u.id=e.user_id left join job_postings as jp on u.id = jp.posted_by and jp.published_at between :startDate and :endDate and jp.active_flg=:activeFlagTrue and job_status!=:jobStatusNotPublished and jp.job_approval_status=:approvalStatusApproved where u.enrolment_status=:enrolmentStatusApproved group by employerId, occupation, jobState, jobDistrict) as totalJobPost left join  (select IFNULL(count(jc.id),0) as closedJobPost, jp.district, jp.occupation, jp.state, jp.posted_by from users as u inner join employer as e on u.id = e.user_id left join job_postings as jp on u.id=jp.posted_by left join job_candidate_mapping as jc on jp.id=jc.job_id and jc.status=:jobStatusHired where jp.published_at between :startDate and :endDate and jp.active_flg=:activeFlagTrue and job_status!=:jobStatusNotPublished and jp.job_approval_status=:approvalStatusApproved group by jp.posted_by, jp.occupation, jp.state, jp.district) as closedJobPost on totalJobPost.employerId = closedJobPost.posted_by and totalJobPost.jobState=closedJobPost.state and totalJobPost.occupation=closedJobPost.occupation and totalJobPost.jobDistrict=closedJobPost.district;